<template>
	<view>
		<view class="boxCont">
			<view><image src="../../static/gktx.jpg" mode=""></image></view>
			<view class="boxRight">
				<view>{{ Indata.CustomerName }}</view>
				<view style="color: #82b1ff;font-size: 28upx;" v-if="Status == 0">[{{ shzt }}]</view>
				<view style="color: #ff0000;font-size: 28upx;" v-else>[{{ shzt }}]</view>
			</view>
		</view>
		<view class="box">
			<view>
				<block v-for="(item, index) in list" :key="index">
					<view class="boxL">{{ item.Title }}</view>
				</block>
			</view>
			<view>
				<block v-for="(item, index) in list" :key="index">
					<view class="boxR">{{ item.Value }}</view>
				</block>
			</view>
		</view>
		<view style="text-align: center;">
			<image style="width: 200upx; height: 200upx;border-radius: 100upx;margin-top: 50upx;transform:rotate(-20deg);" :src="src" mode=""></image>
		</view>
		<view class="footBtn" v-if="Status == 0">
			<button type="warn" @click="reject">拒绝</button>
			<button type="primary" @click="agree">通过</button>
		</view>
		<view class="footBtn" v-if="Status == 1"><button type="warn" style="width: 100%;" @click="reject">驳回</button></view>
		<view class="uni-textarea jjly" v-if="showtextarea" @click="showtextarea = false">
			<view class="dhk" @click.stop="">
				<view style="text-align: center;font-weight: bold;">拒绝理由</view>
				<textarea maxlength="-1" placeholder="请输入拒绝原因" @input="txtcont" />
				<view style="display: flex;margin-top: 20upx;">
					<button type="warn" @click="showtextarea = false">取消</button>
					<button type="primary" @click="queding">确定</button>
				</view>
			</view>
		</view>
	</view>
</template>

<script>
import api from '../../common/http.js';
export default {
	data() {
		return {
			showtextarea: false,
			txtvalue: '',
			Indata: {},
			list: [],
			Status: 0,
			status: 1,
			Id: '',
			shzt: '',
			src: '',
			typeUrl: '',
			CustomerId: ''
		};
	},
	onLoad(options) {
		let data = JSON.parse(options.data);
		this.Indata = data;
		this.CustomerId = data.CustomerId;
		this.list = data.newAuditGoShopInsides;
		this.Status = data.Status;
		this.typeUrl = data.typeUrl;
		this.Id = data.ID;
		if (this.Status == 0) {
			this.shzt = '待审核';
			this.src = '../../static/wait.png';
		} else if (this.Status == 1) {
			this.shzt = '已同意';
			this.src = '../../static/agree.png';
		} else if (this.Status == 2) {
			this.shzt = '已拒绝';
			this.src = '../../static/jujue.png';
		}
	},
	methods: {
		agree() {
			let that = this;
			uni.showModal({
				title: '提示',
				content: '确定要通过审批吗?',
				success: function(res) {
					if (res.confirm) {
						that.getList(1);
					}
				}
			});
		},
		//点击拒绝按钮
		reject() {
			this.showtextarea = true;
		},
		//获取textarea内容
		txtcont(event) {
			this.txtvalue = event.detail.value;
		},
		//点击确定按钮
		queding() {
			this.showtextarea = false;
			this.getList(2);
		},
		getList(Status) {
			let url = this.typeUrl;
			let data = {
				CustomerId: this.CustomerId,
				EmployeeId: uni.getStorageSync('employeeId'),
				Id: this.Id,
				Status: Status,
				AuditRemark: this.txtvalue
			};
			api.httpRequestPost(url, data).then(res => {
				if (res.data.error_code == 'Success') {
					uni.showToast({
						title: '提交成功',
						duration: 2000
					});
					setTimeout(() => {
						uni.navigateBack({
							delta: 1
						});
					}, 2000);
				} else {
					uni.showToast({
						title: res.data.error_message,
						duration: 2000,
						icon: 'none'
					});
				}
			});
		}
	}
};
</script>

<style>
page {
	width: 100%;
	height: 100%;
	background-color: #f4f7ff;
}
image {
	width: 100upx;
	height: 100upx;
	border-radius: 50upx;
}
.box {
	display: flex;
	margin-top: 30upx;
	background-color: #ffffff;
	padding: 30upx 0;
}
.boxL {
	padding: 20upx 0 0 50upx;
	text-align: right;
	color: #919191;
}
.boxR {
	padding: 20upx 0 0 30upx;
}
.boxCont {
	display: flex;
	background-color: #ffffff;
	padding: 20upx 30upx;
}
.boxRight {
	margin-left: 30upx;
	margin-top: 15upx;
}
.footBtn {
	position: absolute;
	left: 0;
	bottom: 0;
	display: flex;
	width: 100%;
}
button {
	width: 50%;
	border-radius: 0;
}
.jjly {
	position: absolute;
	left: 0;
	top: 0;
	width: 100%;
	height: 100%;
	background-color: #6d6d6d;
	background: rgba(0, 0, 0, 0.5);
	padding: 20upx;
}
.dhk {
	margin-top: 40%;
	width: 100%;
	height: 500upx;
	border: 1px solid #6d6d72;
	padding: 20upx;
	background-color: #ffffff;
}
textarea {
	width: 100%;
	height: 300upx;
	border: 1px solid #6d6d72;
	padding: 20upx;
	box-sizing: border-box;
}
</style>
